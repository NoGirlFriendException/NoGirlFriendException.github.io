{"meta":{"title":"Hello, I'm bb","subtitle":"Coding as Calling","description":null,"author":"bb","url":"http://nogirlfriendexception.github.io"},"pages":[{"title":"Tags","date":"2015-09-30T18:24:55.000Z","updated":"2016-04-27T01:11:30.000Z","comments":true,"path":"tags/index.html","permalink":"http://nogirlfriendexception.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"购房记.","slug":"house","date":"2016-09-29T14:31:30.000Z","updated":"2016-10-07T13:24:17.000Z","comments":true,"path":"2016/09/29/house/","link":"","permalink":"http://nogirlfriendexception.github.io/2016/09/29/house/","excerpt":"","text":"转眼来北京就9年多了,毕业也5年了, 随着年龄越来越大, 以及经历各种合租的痛楚之后,越发的希望自己能有一套自己的房子.原本的计划是在回龙观里买一个商住两用房, 30多平米的那种.买这种小产权的房子也是无奈,北京买房是需要购房资格的,需要连续5年社保.我如果从毕业开始算起,也算是交了5年了,但是中间有一段时间从中华英才网离职,在家学习开发,断交了一段时间.导致我失去了购房资格. 所以如果强行在北京买, 只能买这种小产权的房子. 由于哥哥在回龙观买的房子,所以我毕业以后一直在回龙观这边住,也算是半个观里人了, 对这里比较熟悉,比较依赖.所以优先考虑在回龙观去选了,也基本上只考虑这里了. 仔细观察了下, 符合我要求的房子, 竟然只有一个楼盘.叫东亚上北中心.总结一下这里房子的特点. 优点 因为面积小,只有37平米附近, 大概需要120w附近,总价相对来说比较低. 缺点 小户型. 使用面积只有20多平. 超北 没有阳光 贷款只能走商贷,而且只能10年. 每个月还款压力很大 问了下银行这种房子,我最多只能贷款30w, 也就是说需要至少90W的首付! 这也是一个致命伤, 是我根本承受不起的价格. 以后就算有了孩子,也不能上学.更别说落户了. 做决定的那几天想了很多事情,感觉买这种房子的话,一辈子的生活都要搭进去了, 而且父母那边也要卖掉老家空置的那套房子,然后再加上哥哥的帮忙,也不一定能凑够首付. 所以最后选择了放弃.然后买房这件事就暂时冷了下来,我开始静下来考虑一些漫无边际的事情,大概就是人生啊,生活啊,以后啊云云的.思索了几个月也没思索出什么结果, 反倒是之前看的那个房子又涨了几十万….北京的房子真是令人不能琢磨啊.但是这种漫无边际的涨价到是坚定了我买房的心.脑子不知道怎么回事就冒出了去济南买房的念头,然后跟父母大概提了下,父母对这件事也一直很是上心,是他们的一个心病.考虑去济南的原因大概有这么几个 济南IT行业虽然说不是很好,但是还是有的.以后去的话还是可以做相关的工作. 是山东的省会,作为一个山东人回自己的省会发展还是说的过去的. 房价还算温和, 除了东面高新区猛涨以外,西面南面还是很靠谱的. 离北京很近,高铁1个半小时就到了. 离菏泽也不远,如果菏泽开了动车以后,应该也是2个小时以内的行程. 济南有很多老家的朋友 和 亲戚. 父母也是做了决定以后, 立马就动身去了济南, 不过一开始看房的方向是有点选错了,这也是我的问题.因为我一直在北京的缘故, 总是不由自主的去考虑二手房, 导致我父母浪费了很多时间去看二手房,济南的二手房都是那种很破很烂的那种,并且价格很高.最后立哥带着我父母去了一个新的楼盘,恒大的房子. 我父母一眼就看中了样板间,然后就跟我开始商量决定要买.我综合考虑了下这房子的优点 均价 9100 附近 未来出门就是地铁 离济南大学超近, 不知道为什么,我总感觉离大学近是好事. 离我立哥比较近 送精装修, 先不说是不是羊毛出在羊身上了, 因为我要一直在北京上班,没有时间去管装修的事. 虽然现在是列了那么多,但是当时只是脑子已经乱了,每天我在北京上着班,听着父母传来的信息,感觉父母也累到极限了, 也实在是不想让父母再去逛了,于是我立马拍板了,就他了.决定之后也就好说了,第二天4点50就起床然后高铁到了济南, 直接打车到了楼盘, 然后我亲自看了下样板间,看起来确实很不错!然后接下来就一路程序走下来, 认购 -&gt; 去银行面签 -&gt; 然后签合同. 一切算是尘埃落定了吧 房子的一些情况房子的户型图是这样的 然后样板间的一些图片. 主卧 主卫 过道 次卧 次卧2 客厅 客厅换个角度","categories":[],"tags":[{"name":"Life","slug":"Life","permalink":"http://nogirlfriendexception.github.io/tags/Life/"}]},{"title":"聊一聊播放器控制层的Scroll吧","slug":"playerscroll","date":"2016-09-12T03:23:30.000Z","updated":"2016-09-14T03:43:48.000Z","comments":true,"path":"2016/09/12/playerscroll/","link":"","permalink":"http://nogirlfriendexception.github.io/2016/09/12/playerscroll/","excerpt":"","text":"从开始做android开发,一晃就两年十个月了, 算上实习的公司已经经历了三家公司, 不知道是巧合还是怎么三家都是做跟视频有关系的. 今天的记录跟视频有关系但是关系不打,主要是讲视频的控制层.现在回头想想之前做播放器控制层的时候,基本都是没有动过脑子的, 关于MotionEvent 也是一知半解,写出来的控制层的代码,都是从网上搜索到的.然后我看了看几家公司的代码, 基本上大家都是雷同的… 下面贴出来一个 示范代码, 网上随处可见. 反正这代码的逻辑就是算touch Down 下时的Event xy 坐标 然后看当前的Event 坐标 来判断用户 是做的什么操作,以及滑动了多少. 这段代码 大部分时间应该都是没问题的, 大家也都是这样做的.但是在用户做一些特殊操作的时候 就会有问题. 我举个例子:用户touch 到了屏幕中间,然后向右滑动, 然后滑动到最右面, 不要松手 往左滑动.再滑动到中间继续往左滑.你就会发现touch事件有断层, 并且滑动距离与 视频进退的比例不好设定. (这点尤为突出) 这些缺点 以及一些不如意的地方, 由于我描述能力不行, 可能说的不是太清楚, 只有实际开发碰见过这些问题的同学才会明白我说的是什么..之前自己也一直没有注意到这些细节上的问题, 偶尔的一次机会发现了这个体验问题, 决心要解决它,重新去搞一套比较舒服的Scroll 算法. 最后在烨哥+飞哥的共同帮助下,完成了一套暂时看起来还不错的Scroll算法, 所以写下了这篇文章来记录一下想法和实现. 以下是正文首先 我们要明确一件事情, 当用户手指touch down 到屏幕的一瞬间, 整个滑动过程, 用户滑动距离与视频改变的时间的比例,就已经确认了, 不能再因为任何原因改变, 一直到用户手指离开屏幕. 看图上面这条线是影片的时间线,0 就是视频起点d 就是影片的总长度Y 当前currentPosition下面这条线是用户touch点在屏幕上的位置线p是触摸左侧X坐标q 触摸右侧X坐标X touchDown的X坐标 其中需要说明的是 这里有个小细节, 很多人算触摸界限的时候,都习惯性设置0 和 ScreenWidth. 但是其实真正使用的时候, 是没有人会从0开始滑 或者滑到屏幕最右面的, 除非你是测试.所以 p 是设置的1个padding值,并不是 0, q 也不是ScreenWidth. 一般是ScreenWidth - padding. 这套代码的整体思想很简单, x(用户的触摸x坐标)随着用户的滑动不停的在改变, 我们要用x来算出相应的y(影片seek到的位置), 也就是一个二元一次方程. y = ax + b; 所以我们要来先算出 a 和 b的 值.首先是一些常量的初始化, 注释也都有说明,大家自行理解一下.leftTouch 就是手指x坐标离左面的值rightTouch 是离右面的值.touchRange 是总的触摸长度.rightDuration 是影片剩余的时间. 接着上面的说, 我们既然要算出a 和 b, 那么就需要 得到两组合适的 xy 值 代入公式.其中已经确定好的一组值 就是 X 和 Y 就是手指刚落下的时候 那一组. 我们需要做的就是找出另外一组x y 值. 情况其实只有四种 以屏幕触摸终点 对应影片的Duration. 以屏幕触摸中点 对应影片的Duration. 以屏幕触摸起点 对应影片的起点 以屏幕触摸中点 对应影片的起点 可以根据比较 x 与touchRange的比值 与 y 与duration的比值的大小,来确定具体使用哪种情况.比较口头的来说,也是有四种情况, 可以涵盖全部情况 影片已经播放的时间 比较短, 触摸的位置特别靠右. 影片已经播放的时间 比较短, 触摸的位置靠右,但是不是特别靠右 影片已经播放的时间 比较长, 触摸的位置特别靠左, 影片已经播放的时间 比较长, 触摸的位置靠左,但是不是特别靠左 具体代码如下,也是最核心的代码. 这个地方如果理解起来有点困难, 可以画一些图来感受一下,就能明白为什么这样对应了.得到 两组 xy 值以后, 代入二元一次方程, 算出 ab 以后就好说拉！ 以上就是整套Scroll的代码和解析了, 实际跑起来的效果特别好! 顺滑无比! 怎么滑动都不会有断层,而且无论用户触摸在哪里开始滑动,滑动距离与影片改变的时间都很舒服.","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"http://nogirlfriendexception.github.io/tags/Android/"}]},{"title":"你就是我的天使.","slug":"life","date":"2016-08-29T11:31:30.000Z","updated":"2016-08-29T03:42:27.000Z","comments":true,"path":"2016/08/29/life/","link":"","permalink":"http://nogirlfriendexception.github.io/2016/08/29/life/","excerpt":"","text":"相识 相识皆是偶然,几年前因为游戏的缘故和你相识, 最初因为天各一方,加上这样那样的原因,一直只是远远的和你沟通过,沟通的内容也大多是与游戏相关. 缘起 第一次对你产生兴趣竟然是偶尔的一次深夜, 你推荐给我了一首歌, 名字叫唉声叹气; 应该算是一个很冷门的歌曲了,并且是听不懂的粤语,但是不知道为什么深得我心. 在单曲循环了很多很多个夜晚以后, 开始对你这个小姑娘产生了兴趣, 然后你又陆续给我介绍了好几首歌曲, 都是我喜欢的那种. 陆陆续续发现了很多和你聊的来的地方 以及三观出乎意料的一致. 但是依然是由于这样那样的原因,并没有让我往前走出那一步. 每一次动心都默默的只是动心而已. 记着有一天下午和你聊天,聊到双方所期望的对方是什么样的,说到深处突然发现你我或许有一点合适. 但是因为分隔两地,这个话题也就戛然而止了. 时间就这样一天天的过, 转眼认识了两年多, 有一天你突然跟我说, 想离开家乡来北京闯一闯,看看外面的世界, 说真的, 当时我内心是激动的开心的, 但是很快冷静下来,沉住了气, 开始帮你分析利弊,以及如何说服家里. 内心是充满着期待和好奇的, 开始盼着你的到来. 但是我也告诉了自己,其实一切很难, 无论是 你摆脱家里的一切来到北京, 还是我摆脱一切的束缚,迈出那一步. 相见 等待是煎熬的,漫长的. 你说明天就要来北京了, 嘴上说着好啊好啊, 但是心里还是不敢彻底相信, 担心着这样那样的变数. 直到那个午后, 你如同一个小天使一样蹦蹦哒哒的出现在我面前, 我嘴上说着hi. 心里却说着 终于等来了你. 很快一切的一切都变得脆弱不堪一击, 我的世界里全部的打算 计划 担忧 迷茫 都变成一句话 我爱你,我要不顾一切和你在一起. 你让我明白了这世界上最美好的事, 就是我爱上了你,你也爱我. 你让我奋斗变得更有意义. 你让我对明天充满着期待. 你让我变得不可自拔. 你让我明白,你就是那个陪我走到最后的人,让我可以付出一切的人. 此生只求与你相伴终老.","categories":[],"tags":[{"name":"Life","slug":"Life","permalink":"http://nogirlfriendexception.github.io/tags/Life/"}]},{"title":"做lib的时候学习到的一种思路.","slug":"lib-experience","date":"2016-08-03T11:31:30.000Z","updated":"2016-08-03T11:53:13.000Z","comments":true,"path":"2016/08/03/lib-experience/","link":"","permalink":"http://nogirlfriendexception.github.io/2016/08/03/lib-experience/","excerpt":"","text":"废话不多说,前几天我在我的支付lib 中,提交了一段很简单的代码,可是cto却指出了有严重的问题.代码是这样的. 代码很简单也很容易理解, 我这是一个支付lib, 然后这个类提供了1个发起支付的函数,我拿到外部传给我的Charge 进行检验,检验完毕后,我会调用Ping++ 发起支付.其中那个Callback 就是对各种支付结果进行反馈的.是不是看起来没有什么问题? 但是我的cto 看到后 立马就指出来了一个非常严重的问题 是这样的. 当外部调用这个方法的时候, 外部一般是这样的 show a loading Dialog –&gt; xx.createPayment(xx, xx, Callback);然后在 Callback{ onPaySuccess(); onPayFailed();} 的回调中, 隐藏掉这个dialog. ok 看起来一切都是正常的.但是cto说,你要明白你是做lib的, 你是无法控制外部何时显示dialog的, 你需要做的是保证无论什么情况都能让调用者收到callback.但是你这样写法的话, 如果外部是这样写的xx.createPayment(xx, xx, Callback); –&gt; show a loading Dialog ;然后它恰巧OrderId 不符合规定,那么 他就会出现先收到错误的回调 然后显示dialog的情况.然后他的那个dialog 就再也不会消失了… 然后正确的写法应该是这样的. 相信你已经看懂了问题所在,通过post到队列的最后,来保证时序是正确的. 感谢烨哥,学到了很多.","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"http://nogirlfriendexception.github.io/tags/Android/"}]},{"title":"三步学习计划","slug":"summary","date":"2016-07-31T10:03:30.000Z","updated":"2016-07-31T14:33:24.000Z","comments":true,"path":"2016/07/31/summary/","link":"","permalink":"http://nogirlfriendexception.github.io/2016/07/31/summary/","excerpt":"","text":"感觉自从一年前离开闪动以后,学习进度和劲头就降下来了,一方面因为公司的业务挺忙,一直有活干,当然这都是一些托辞吧,主要还是自己比较懒,之前学的东西可以应付工作中的大部分内容了,让自己开始松懈起来. 最近决定结束这种精神状态,开始恢复每天都能保持学习的日子. 第一个三月计划读完的书 android开发艺术探索 代码整洁之道 重构改善既有代码的设计 HeadFirst 设计模式 android 内核剖析 java并发编程实战 java 网络编程 需要掌握的知识点 android 自定义View相关 设计模式 android 动画 深刻理解 SurfaceView java 多线程 java 网络相关 java io相关 state machine. 第二个三月计划读完的书 算法 linux 私房菜 gradle 实战 暂定 需要掌握的知识点 gradle 相关知识 数据结构算法 学习 linux 学习 第三个三月暂定我知道自己不可能像戒烟一样那样决绝的戒掉游戏,但是我总是去做点什么证明自己努力过.就从现在开始把.","categories":[],"tags":[{"name":"Life","slug":"Life","permalink":"http://nogirlfriendexception.github.io/tags/Life/"}]},{"title":"播放器重构中遇见的坑","slug":"mediaplayer-rebuild","date":"2016-06-06T10:47:30.000Z","updated":"2016-07-28T03:39:53.000Z","comments":true,"path":"2016/06/06/mediaplayer-rebuild/","link":"","permalink":"http://nogirlfriendexception.github.io/2016/06/06/mediaplayer-rebuild/","excerpt":"","text":"播放器重构中遇见的坑 最近一直在重构公司项目的播放器项目, 这次重构是借鉴了Bilibili开源的ijkPlayer 代码的 写法, 一个VideoView 对应各种播放器内核.(android mediaplayer, exoplayer, ijkplayer.)rendenview 与 Mediaplayer 层面 隔离开. 在开发过程中遇见了几个小坑. 播放器状态相关简单的来说, mediaplayer 和ijkplayer 在进入Preparing的状态中时, 是不会对视频本身进行缓冲的, 而仅仅是做了初始化播放器的工作, 也就是说在prepared完成之前, 是不会有buffer的生命周期回调的, 而是在prepared 之后, 才会开始进入buffering state. 但是exoplayer的理念和 这两者有一点小小的不同,exoplayer在 进入 preparing状态之后 初始化完成播放器以后,会对视频本身开始buffer, buffer到足够开始进行播放以后, 才会回掉 STATE_READY(Prepared)的状态.这会给上层做整套生命周期 造成一定的影响. 如图: androidmediaplayer/ ijkplayer 的初始化生命周期 IDLE –&gt; Preparing –&gt; Prepared –&gt; buffering –&gt; playing. exoplayer的 初始化生命周期 IDLE –&gt; preparing –&gt; buffering –&gt; prepared(ready) onCompletion 相关这三个播放器都有onCompletion的回调,这个回调其实很好理解,就是播放完成的时候会回调该生命周期,但是ijkplayer回调的时机是有问题的, 它不仅仅在播放完成的时候会回调该方法,而且在出现错误的时候也会回调该方法。播放器产生错误 –&gt; onError –&gt; onCompletion.我也跟IJK的作者提了issue;作者也承认了这个错误, 但是 他说 这并不重要, not on plan. SeekTo 相关android mediaplayer seekTo 到 mediaplayer.getDuration(); 也就是说 seek到最后 正常来说 是没有什么问题的.可以正常seek, 然后成功进入completed状态. 然后这个时候调用start. 也不会有什么问题 会进入Playing状态但是你如果再次seekTo mediaplayer.getDuration(); 再点播放 就会出问题了, Mediaplayer 内部状态已经混乱了.对于这件事 我不知道为什么网上搜不到很多相关的问题, 可能是我太无聊了或者我使用方法不恰当的问题把.总而言之最后我做了WorkAround.每次执行seekTo的时候 我都会判断1下 是不是seekTo到最后 如果是 我就seekTo到getDuration() - 2000;然后 问题解决了 不过还好 这些问题如果理解的好,可以在上层进行规避.把三套播放器的生命周期 可以整合一套的。","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"http://nogirlfriendexception.github.io/tags/Android/"}]},{"title":"上传Android Library 到 bintray","slug":"upload-androidlib-bintray","date":"2015-11-09T03:42:30.000Z","updated":"2016-07-31T09:38:28.000Z","comments":true,"path":"2015/11/09/upload-androidlib-bintray/","link":"","permalink":"http://nogirlfriendexception.github.io/2015/11/09/upload-androidlib-bintray/","excerpt":"","text":"上传Android Library 到 bintray. 给公司写的videoplayer模块version one 完成了, 公司两个项目都需要用到这个模块,并且其中一个项目外包出去了,所以就要把这个模块上传到一个公共的lib库,方便外包的哥们去调用. 以及后续我这边更新维护. 然后选择了上传到bintray这个网站上. 说实话不是太了解这块儿东西,来这个公司之前一直是闷头写代码层的东西,每天就对着svn和eclipse, 什么maven,git,As,jcenter,bintray 等等完全没接触过. 谢谢公司给了机会去学习这些,但由于英语不好,在学习使用的途中踩了很多坑.这篇文章就是记录我把这个模块传到 bintray上 整个过程踩过的坑. 第一步 注册首先你需要 去bintray官网 注册个账号,这里就不过多描述了.你可以的.注册完毕以后 点击这里 进入maven管理界面然后 点击 创建新的package name 就是项目的名称licenses 我选择的是apache-2.0version control 我填的是github上的地址然后一切ok, 点击create package. 创建完毕. #第二步 寻找好用的publisher作者一开始不懂这个是干什么的,是公司的cto给我推荐了1个github地址,让我去学习那个,并且告诉我这个是最简单的上传方式.地址是 novoda其实英语好的哥们看到这应该已经知道怎么弄了 第一步 把这些配置到 你要发布的项目的 build.gradle文件中 这里需要注意的是apply plugin: ‘com.novoda.bintray-release’ 这句话 需要放在com.android.library 下面如图 第二步在build.gradle 文件中添加这个方法块。其中userorg 就是你的用户idgroupid 就是你的唯一包名artifactId 是你之前最初在bintary的maven中创建的那个package的名字,这里需要对应上 否则会上传失败.publishVersion 就是你的版本id咯下面2个随意填了 第三步$ ./gradlew clean build bintrayUpload -PbintrayUser=BINTRAY_USERNAME -PbintrayKey=BINTRAY_KEY -PdryRun=false在命令行中输出这些,其中需要把BINTRAY_USERNAME 替换成你的bintary的名字BINTRAY_KEY 替换成你的 BIntray的key ,其中key 可以点击你bintary中头像旁边的edit.进入API-Key 可以看到你的key,然后 copy进来就好了！这个时候打回车！ 然后就run起来了就好了.上传成功以后 你可以在你bintary 那个项目中 的管理页面看到这个 如果看到1.0.0 恭喜你 那就是上传成功, 但是这只是1个私人的,还不能让别人都用这个时候你需要点下面那个add to jcenter 然后申请加入jcenter用英语写几句描述 然后 提交 然后 就耐心等待就好了！！ #哦 对了有可能会报一个 :lint 什么什么找不到的错误 我在这卡了好一会儿.需要在android中添加这么一句 如图 就是那个lintOptions什么什么的 哦哦我想起来了 有可能会出现什么tools.jar找不到的 bug这个解决比较简单 有可能是你机器的JAVA_HOME没有指对比如我是rmbp 最初的JAVA_HOME是指向的mac 自带的1.6 jdk.修改成 androidstudio 指向的1.7的jdk 后就好了！！！","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"http://nogirlfriendexception.github.io/tags/Android/"}]}]}