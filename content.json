{"meta":{"title":"Hello, I'm bb","subtitle":"Coding as Calling","description":null,"author":"bb","url":"http://nogirlfriendexception.github.io"},"pages":[{"title":"Tags","date":"2015-09-30T18:24:55.000Z","updated":"2016-04-27T01:11:30.000Z","comments":true,"path":"tags/index.html","permalink":"http://nogirlfriendexception.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"从前, 现在, 未来","slug":"summary","date":"2016-07-28T10:47:30.000Z","updated":"2016-07-28T02:59:17.000Z","comments":true,"path":"2016/07/28/summary/","link":"","permalink":"http://nogirlfriendexception.github.io/2016/07/28/summary/","excerpt":"","text":"","categories":[],"tags":[{"name":"Life","slug":"Life","permalink":"http://nogirlfriendexception.github.io/tags/Life/"}]},{"title":"播放器重构中遇见的坑","slug":"mediaplayer-rebuild","date":"2016-06-06T10:47:30.000Z","updated":"2016-07-28T03:39:53.000Z","comments":true,"path":"2016/06/06/mediaplayer-rebuild/","link":"","permalink":"http://nogirlfriendexception.github.io/2016/06/06/mediaplayer-rebuild/","excerpt":"","text":"播放器重构中遇见的坑 最近一直在重构公司项目的播放器项目, 这次重构是借鉴了Bilibili开源的ijkPlayer 代码的 写法, 一个VideoView 对应各种播放器内核.(android mediaplayer, exoplayer, ijkplayer.)rendenview 与 Mediaplayer 层面 隔离开. 在开发过程中遇见了几个小坑. 播放器状态相关简单的来说, mediaplayer 和ijkplayer 在进入Preparing的状态中时, 是不会对视频本身进行缓冲的, 而仅仅是做了初始化播放器的工作, 也就是说在prepared完成之前, 是不会有buffer的生命周期回调的, 而是在prepared 之后, 才会开始进入buffering state. 但是exoplayer的理念和 这两者有一点小小的不同,exoplayer在 进入 preparing状态之后 初始化完成播放器以后,会对视频本身开始buffer, buffer到足够开始进行播放以后, 才会回掉 STATE_READY(Prepared)的状态.这会给上层做整套生命周期 造成一定的影响. 如图: androidmediaplayer/ ijkplayer 的初始化生命周期 IDLE –&gt; Preparing –&gt; Prepared –&gt; buffering –&gt; playing. exoplayer的 初始化生命周期 IDLE –&gt; preparing –&gt; buffering –&gt; prepared(ready) onCompletion 相关这三个播放器都有onCompletion的回调,这个回调其实很好理解,就是播放完成的时候会回调该生命周期,但是ijkplayer回调的时机是有问题的, 它不仅仅在播放完成的时候会回调该方法,而且在出现错误的时候也会回调该方法。播放器产生错误 –&gt; onError –&gt; onCompletion.我也跟IJK的作者提了issue;作者也承认了这个错误, 但是 他说 这并不重要, not on plan. SeekTo 相关android mediaplayer seekTo 到 mediaplayer.getDuration(); 也就是说 seek到最后 正常来说 是没有什么问题的.可以正常seek, 然后成功进入completed状态. 然后这个时候调用start. 也不会有什么问题 会进入Playing状态但是你如果再次seekTo mediaplayer.getDuration(); 再点播放 就会出问题了, Mediaplayer 内部状态已经混乱了.对于这件事 我不知道为什么网上搜不到很多相关的问题, 可能是我太无聊了或者我使用方法不恰当的问题把.总而言之最后我做了WorkAround.每次执行seekTo的时候 我都会判断1下 是不是seekTo到最后 如果是 我就seekTo到getDuration() - 2000;然后 问题解决了 不过还好 这些问题如果理解的好,可以在上层进行规避.把三套播放器的生命周期 可以整合一套的。","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"http://nogirlfriendexception.github.io/tags/Android/"}]},{"title":"上传Android Library 到 bintray","slug":"upload-androidlib-bintray","date":"2015-11-09T03:42:30.000Z","updated":"2016-07-27T02:37:09.000Z","comments":true,"path":"2015/11/09/upload-androidlib-bintray/","link":"","permalink":"http://nogirlfriendexception.github.io/2015/11/09/upload-androidlib-bintray/","excerpt":"","text":"上传Android Library 到 bintray. 给公司写的videoplayer模块version one 完成了, 公司两个项目都需要用到这个模块,并且其中一个项目外包出去了,所以就要把这个模块上传到一个公共的lib库,方便外包的哥们去调用. 以及后续我这边更新维护. 然后选择了上传到bintray这个网站上. 说实话不是太了解这块儿东西,来这个公司之前一直是闷头写代码层的东西,每天就对着svn和eclipse, 什么maven,git,As,jcenter,bintray 等等完全没接触过. 谢谢公司给了机会去学习这些,但由于英语不好,在学习使用的途中踩了很多坑.这篇文章就是记录我把这个模块传到 bintray上 整个过程踩过的坑. 第一步 注册首先你需要 去bintray官网 注册个账号,这里就不过多描述了.你可以的.注册完毕以后 点击这里 进入maven管理界面然后 点击 创建新的package name 就是项目的名称licenses 我选择的是apache-2.0version control 我填的是github上的地址然后一切ok, 点击create package. 创建完毕. #第二步 寻找好用的publisher作者一开始不懂这个是干什么的,是公司的cto给我推荐了1个github地址,让我去学习那个,并且告诉我这个是最简单的上传方式.地址是 novoda其实英语好的哥们看到这应该已经知道怎么弄了 第一步 把这些配置到 你要发布的项目的 build.gradle文件中 这里需要注意的是apply plugin: ‘com.novoda.bintray-release’ 这句话 需要放在com.android.library 下面如图 第二步在build.gradle 文件中添加这个方法块。其中userorg 就是你的用户idgroupid 就是你的唯一包名artifactId 是你之前最初在bintary的maven中创建的那个package的名字,这里需要对应上 否则会上传失败.publishVersion 就是你的版本id咯下面2个随意填了 第三步$ ./gradlew clean build bintrayUpload -PbintrayUser=BINTRAY_USERNAME -PbintrayKey=BINTRAY_KEY -PdryRun=false在命令行中输出这些,其中需要把BINTRAY_USERNAME 替换成你的bintary的名字BINTRAY_KEY 替换成你的 BIntray的key ,其中key 可以点击你bintary中头像旁边的edit.进入API-Key 可以看到你的key,然后 copy进来就好了！这个时候打回车！ 然后就run起来了就好了.上传成功以后 你可以在你bintary 那个项目中 的管理页面看到这个 如果看到1.0.0 恭喜你 那就是上传成功, 但是这只是1个私人的,还不能让别人都用这个时候你需要点下面那个add to jcenter 然后申请加入jcenter用英语写几句描述 然后 提交 然后 就耐心等待就好了！！ #哦 对了有可能会报一个 :lint 什么什么找不到的错误 我在这卡了好一会儿.需要在android中添加这么一句 如图 就是那个lintOptions什么什么的 哦哦我想起来了 有可能会出现什么tools.jar找不到的 bug这个解决比较简单 有可能是你机器的JAVA_HOME没有指对比如我是rmbp 最初的JAVA_HOME是指向的mac 自带的1.6 jdk.修改成 androidstudio 指向的1.7的jdk 后就好了！！！ 后续如果我发现有新的问题 我会后续更新这个文章","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"http://nogirlfriendexception.github.io/tags/Android/"}]}]}